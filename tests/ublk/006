#!/bin/bash
# SPDX-License-Identifier: GPL-3.0+
# Copyright (C) 2023 Ziyang Zhang
#
# Test ublk recovery with two times daemon kill:
# (1)kill all ubq_deamon, (2)recover with new ubq_daemon,
# (3)kill all ubq_deamon, (4)delete dev

. tests/ublk/rc

DESCRIPTION="test ublk recovery with two times daemon kill"

_run() {
	local type=$1

	if [ "$type" == "null" ]; then
		${UBLK_PROG} add -t null -n 0 -r > "$FULL" 2>&1
	else
		truncate -s 1G "$TMPDIR/img"
		${UBLK_PROG} add -t loop -f "$TMPDIR/img" -n 0 -r > "$FULL" 2>&1
	fi

	udevadm settle
	if ! ${UBLK_PROG} list -n 0 >> "$FULL" 2>&1; then
		echo "fail to list dev"
	fi

	_run_fio_rand_io --filename=/dev/ublkb0 --time_based \
			--runtime=30 >> "$FULL" 2>&1 &
	sleep 2

	kill -9 "$(_get_ublk_daemon_pid 0)"

	local secs=0
	local state=""
	while [ "$secs" -lt 20 ]; do
		state="$(_get_ublk_dev_state 0)"
		[ "$state" == "QUIESCED" ] && break
		sleep 1
		(( secs++ )) || true
	done

	state="$(_get_ublk_dev_state 0)"
	[ "$state" != "QUIESCED" ] && echo "device is $state after killing queue daemon"

	if [ "$type" == "null" ]; then
		${UBLK_PROG} recover -t null -n 0 >> "$FULL" 2>&1
	else
		${UBLK_PROG} recover -t loop -f "$TMPDIR/img" -n 0 >> "$FULL" 2>&1
	fi

	secs=0
	while [ "$secs" -lt 20 ]; do
		state="$(_get_ublk_dev_state 0)"
		[ "$state" == "LIVE" ] && break
		sleep 1
		(( secs++ )) || true
	done
	[ "$state" != "LIVE" ] && echo "device is $state after recovery"

	kill -9 "$(_get_ublk_daemon_pid 0)"

	${UBLK_PROG} del -n 0 >> "$FULL" 2>&1
}

test() {
	echo "Running ${TEST_NAME}"

	if ! _init_ublk; then
		return 1
	fi

	for type in "null" "loop"; do
		_run "$type"
	done

	_exit_ublk

	echo "Test complete"
}

