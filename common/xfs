#!/bin/bash
# SPDX-License-Identifier: GPL-3.0+
# Copyright (C) 2017 Omar Sandoval
#
# fio helper functions.

. common/shellcheck

_have_xfs() {
	_have_fs xfs && _have_program mkfs.xfs
}

_test_dev_suits_xfs() {
	local logical_block_size

	logical_block_size=$(_test_dev_queue_get logical_block_size)
	if ((logical_block_size > 32768 )); then
		SKIP_REASONS+=("sector size ${logical_block_size} is larger than max XFS sector size 32768")
		return 1
	fi
	return 0
}

_xfs_mkfs_and_mount() {
	local bdev=$1
	local mount_dir=$2
	local bs
	local xfs_logsize="64m"

	bs=$(_min_io "$bdev")

	if [[ $bs -gt 4096 ]]; then
		xfs_logsize="128m"
	fi

	mkdir -p "${mount_dir}"
	umount --quiet "${mount_dir}"
	mkfs.xfs -l size=$xfs_logsize -f "${bdev}" -b size="$bs" || return $?
	mount "${bdev}" "${mount_dir}"
}

_xfs_run_fio_verify_io() {
	local mount_dir="/mnt/blktests"
	local bdev=$1
	local sz=$2
	local sz_mb
	local avail
	local avail_mb
	local rc

	_xfs_mkfs_and_mount "${bdev}" "${mount_dir}" \
		>>"${FULL}" 2>&1 || return $?

	avail="$(df --output=avail "${mount_dir}" | tail -1)"
	avail_mb="$((avail / 1024))"

	if [[ -z "${sz}" ]]; then
		sz_mb="${avail_mb}"
	else
		sz_mb="$(convert_to_mb "${sz}")"
		if [[ "${sz_mb}" -gt "${avail_mb}" ]]; then
			sz_mb="${avail_mb}"
		fi
	fi

	_run_fio_verify_io --size="${sz_mb}m" --directory="${mount_dir}/"
	rc=$?

	umount "${mount_dir}" >> "${FULL}" 2>&1
	rm -fr "${mount_dir}"

	return "${rc}"
}
